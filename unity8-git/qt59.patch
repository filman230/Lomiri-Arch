From 4940bc80c1a1238d19298ab30d899e42d7fb946e Mon Sep 17 00:00:00 2001
From: Ivan Semkin <ivan@semkin.ru>
Date: Sat, 23 Jun 2018 18:51:54 +0300
Subject: [PATCH 1/3] Fix Unity.Test on Qt > 5.9

---
 tests/utils/CMakeLists.txt                                   |  2 +-
 tests/utils/modules/Unity/Test/TouchEventSequenceWrapper.cpp | 11 ++++++++++-
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/tests/utils/CMakeLists.txt b/tests/utils/CMakeLists.txt
index 30816545e..8e2019b6e 100644
--- a/tests/utils/CMakeLists.txt
+++ b/tests/utils/CMakeLists.txt
@@ -1 +1 @@
-#add_subdirectory(modules) #FIXME broken with qt 5.9
+add_subdirectory(modules)
diff --git a/tests/utils/modules/Unity/Test/TouchEventSequenceWrapper.cpp b/tests/utils/modules/Unity/Test/TouchEventSequenceWrapper.cpp
index 65da201fa..26bdf43ab 100644
--- a/tests/utils/modules/Unity/Test/TouchEventSequenceWrapper.cpp
+++ b/tests/utils/modules/Unity/Test/TouchEventSequenceWrapper.cpp
@@ -15,6 +15,7 @@
  */
 
 #include "TouchEventSequenceWrapper.h"
+#include <private/qquickanimatorcontroller_p.h>
 #include <private/qquickwindow_p.h>
 
 TouchEventSequenceWrapper::TouchEventSequenceWrapper(QTest::QTouchEventSequence eventSequence, QQuickItem *item)
@@ -34,7 +35,15 @@ void TouchEventSequenceWrapper::commit(bool processEvents)
 
     if (window) {
         QQuickWindowPrivate *wp = QQuickWindowPrivate::get(window);
-        wp->flushDelayedTouchEvent();
+        if (wp->delayedTouch) {
+            wp->deliverDelayedTouchEvent();
+
+            // Touch events which constantly start animations (such as a behavior tracking
+            // the mouse point) need animations to start.
+            QQmlAnimationTimer *ut = QQmlAnimationTimer::instance();
+            if (ut && ut->hasStartAnimationPending())
+                ut->startAnimations();
+        }
     }
 }
 

From 19a1e9b42ac6895c0619ca8760eeca15ed3e541d Mon Sep 17 00:00:00 2001
From: Ivan Semkin <ivan@semkin.ru>
Date: Sat, 23 Jun 2018 18:58:43 +0300
Subject: [PATCH 2/3] Fix Components tst_DragHandle test on Qt >= 5.9

---
 tests/qmltests/CMakeLists.txt                |  2 +-
 tests/qmltests/Components/tst_DragHandle.cpp | 21 +++++++++++++++++++--
 2 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/tests/qmltests/CMakeLists.txt b/tests/qmltests/CMakeLists.txt
index 93e30c252..9fd5db4c9 100644
--- a/tests/qmltests/CMakeLists.txt
+++ b/tests/qmltests/CMakeLists.txt
@@ -1,5 +1,5 @@
 
-#add_subdirectory(Components) #FIXME broken with qt 5.9
+add_subdirectory(Components)
 
 add_unity8_qmltest(. OrientedShell)
 add_unity8_qmltest(. DisabledScreenNotice)
diff --git a/tests/qmltests/Components/tst_DragHandle.cpp b/tests/qmltests/Components/tst_DragHandle.cpp
index 4db9f9642..80c91737f 100644
--- a/tests/qmltests/Components/tst_DragHandle.cpp
+++ b/tests/qmltests/Components/tst_DragHandle.cpp
@@ -20,6 +20,7 @@
 #include <qpa/qwindowsysteminterface.h>
 #include <QtQuick/QQuickView>
 #include <QtQml/QQmlEngine>
+#include <private/qquickanimatorcontroller_p.h>
 #include <private/qquickwindow_p.h>
 #include <UbuntuGestures/private/ucswipearea_p_p.h>
 
@@ -179,7 +180,15 @@ void tst_DragHandle::flickAndHold(QQuickItem *dragHandle,
     QTest::touchEvent(m_view, m_device).release(0, touchPoint.toPoint());
 
     QQuickWindowPrivate *windowPrivate = QQuickWindowPrivate::get(m_view);
-    windowPrivate->flushDelayedTouchEvent();
+    if (windowPrivate->delayedTouch) {
+        windowPrivate->deliverDelayedTouchEvent();
+
+        // Touch events which constantly start animations (such as a behavior tracking
+        // the mouse point) need animations to start.
+        QQmlAnimationTimer *ut = QQmlAnimationTimer::instance();
+        if (ut && ut->hasStartAnimationPending())
+            ut->startAnimations();
+    }
 }
 
 void tst_DragHandle::drag(QPointF &touchPoint, const QPointF& direction, qreal distance,
@@ -194,7 +203,15 @@ void tst_DragHandle::drag(QPointF &touchPoint, const QPointF& direction, qreal d
         m_fakeTimeSource->m_msecsSinceReference += timeStep;
         QTest::touchEvent(m_view, m_device).move(0, touchPoint.toPoint());
 
-        windowPrivate->flushDelayedTouchEvent();
+        if (windowPrivate->delayedTouch) {
+            windowPrivate->deliverDelayedTouchEvent();
+
+            // Touch events which constantly start animations (such as a behavior tracking
+            // the mouse point) need animations to start.
+            QQmlAnimationTimer *ut = QQmlAnimationTimer::instance();
+            if (ut && ut->hasStartAnimationPending())
+                ut->startAnimations();
+        }
     }
 }
 

From 4dd4d1e084ae285eb1b7216b0bf2c6371c1f476a Mon Sep 17 00:00:00 2001
From: Ivan Semkin <ivan@semkin.ru>
Date: Sat, 23 Jun 2018 19:10:52 +0300
Subject: [PATCH 3/3] Fix Gestures tests on Qt >= 5.9

---
 tests/plugins/Ubuntu/CMakeLists.txt             |  2 +-
 tests/plugins/Ubuntu/Gestures/GestureTest.cpp   | 11 ++++++++++-
 tests/plugins/Ubuntu/Gestures/tst_TouchGate.cpp | 11 ++++++++++-
 3 files changed, 21 insertions(+), 3 deletions(-)

diff --git a/tests/plugins/Ubuntu/CMakeLists.txt b/tests/plugins/Ubuntu/CMakeLists.txt
index 6b323b75b..bb6fd56ec 100644
--- a/tests/plugins/Ubuntu/CMakeLists.txt
+++ b/tests/plugins/Ubuntu/CMakeLists.txt
@@ -1 +1 @@
-#add_subdirectory(Gestures) #FIXME broken with qt 5.9
+add_subdirectory(Gestures)
diff --git a/tests/plugins/Ubuntu/Gestures/GestureTest.cpp b/tests/plugins/Ubuntu/Gestures/GestureTest.cpp
index 6e4302bf6..c3f13957f 100644
--- a/tests/plugins/Ubuntu/Gestures/GestureTest.cpp
+++ b/tests/plugins/Ubuntu/Gestures/GestureTest.cpp
@@ -17,6 +17,7 @@
 #include "GestureTest.h"
 
 #include <qpa/qwindowsysteminterface.h>
+#include <private/qquickanimatorcontroller_p.h>
 #include <private/qquickwindow_p.h>
 #include <QQmlEngine>
 #include <QQuickView>
@@ -108,7 +109,15 @@ void GestureTest::sendTouch(qint64 timestamp, int id, QPointF pos,
     QCoreApplication::sendEvent(m_view, &touchEvent);
 
     QQuickWindowPrivate *windowPrivate = QQuickWindowPrivate::get(m_view);
-    windowPrivate->flushDelayedTouchEvent();
+    if (windowPrivate->delayedTouch) {
+        windowPrivate->deliverDelayedTouchEvent();
+
+        // Touch events which constantly start animations (such as a behavior tracking
+        // the mouse point) need animations to start.
+        QQmlAnimationTimer *ut = QQmlAnimationTimer::instance();
+        if (ut && ut->hasStartAnimationPending())
+            ut->startAnimations();
+    }
 }
 
 void GestureTest::passTime(qint64 timeSpanMs)
diff --git a/tests/plugins/Ubuntu/Gestures/tst_TouchGate.cpp b/tests/plugins/Ubuntu/Gestures/tst_TouchGate.cpp
index a16bef42b..77258d043 100644
--- a/tests/plugins/Ubuntu/Gestures/tst_TouchGate.cpp
+++ b/tests/plugins/Ubuntu/Gestures/tst_TouchGate.cpp
@@ -19,6 +19,7 @@
 #include <QQmlEngine>
 #include <QQuickView>
 #include <QSharedPointer>
+#include <private/qquickanimatorcontroller_p.h>
 #include <private/qquickwindow_p.h>
 
 // C++ std lib
@@ -191,7 +192,15 @@ void tst_TouchGate::holdsEventsUntilGainsOwnership()
     if (!ownershipAfterTouchEnd) {
         touchRegistry->removeCandidateOwnerForTouch(0, candidateItem);
         QQuickWindowPrivate *wp = QQuickWindowPrivate::get(testItem->window());
-        wp->flushDelayedTouchEvent();
+        if (wp->delayedTouch) {
+            wp->deliverDelayedTouchEvent();
+
+            // Touch events which constantly start animations (such as a behavior tracking
+            // the mouse point) need animations to start.
+            QQmlAnimationTimer *ut = QQmlAnimationTimer::instance();
+            if (ut && ut->hasStartAnimationPending())
+                ut->startAnimations();
+        }
         // TouchGate should now open its flood gates and let testItem get all
         // events from touch 0 produced so far
         QCOMPARE(testItem->touchEventsReceived.count(), 2);
