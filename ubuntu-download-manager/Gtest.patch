diff --git a/cmake/modules/FindGtest.cmake b/cmake/modules/FindGtest.cmake
index 25350d59..2e92c6ef 100644
--- a/cmake/modules/FindGtest.cmake
+++ b/cmake/modules/FindGtest.cmake
@@ -1,67 +1,69 @@
-include(ExternalProject)
 include(FindPackageHandleStandardArgs)
 
-#gtest
-if (EXISTS /usr/src/googletest)
-    set (USING_GOOGLETEST_1_8 TRUE)
-    set (GTEST_INSTALL_DIR /usr/src/googletest/googletest/include)
-else()
-    set(GTEST_INSTALL_DIR /usr/src/gmock/gtest/include)
-endif()
-find_path(GTEST_INCLUDE_DIR gtest/gtest.h
-            HINTS ${GTEST_INSTALL_DIR})
-
-#gmock
-find_path(GMOCK_INSTALL_DIR CMakeLists.txt
-          HINTS /usr/src/googletest /usr/src/gmock)
-if(${GMOCK_INSTALL_DIR} STREQUAL "GMOCK_INSTALL_DIR-NOTFOUND")
-    message(FATAL_ERROR "google-mock package not found")
-endif()
+find_package(GTest)
 
-find_path(GMOCK_INCLUDE_DIR gmock/gmock.h)
+if (NOT GTEST_FOUND)
+    include(ExternalProject)
 
-if (USING_GOOGLETEST_1_8)
-  set(GMOCK_BASE_BINARY_DIR ${CMAKE_BINARY_DIR}/gmock/libs)
-  set(GMOCK_BINARY_DIR ${GMOCK_BASE_BINARY_DIR}/googlemock)
-  set(GTEST_BINARY_DIR ${GMOCK_BINARY_DIR}/gtest)
-else()
-  set(GMOCK_BASE_BINARY_DIR ${CMAKE_BINARY_DIR}/gmock/libs)
-  set(GMOCK_BINARY_DIR ${GMOCK_BASE_BINARY_DIR})
-  set(GTEST_BINARY_DIR ${GMOCK_BINARY_DIR}/gtest)
-endif()
+    find_path(GTEST_ROOT
+        NAMES CMakeLists.txt
+        PATHS /usr/src/gtest /usr/src/googletest/googletest/
+        DOC "Path to GTest CMake project")
+
+    ExternalProject_Add(GTest PREFIX ./gtest
+            SOURCE_DIR ${GTEST_ROOT}
+            CMAKE_ARGS
+                -DCMAKE_CXX_COMPILER_WORKS=1
+                -DCMAKE_CXX_FLAGS='${CMAKE_CXX_FLAGS}'
+                -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
+            INSTALL_COMMAND true
+            BUILD_BYPRODUCTS
+                ${CMAKE_CURRENT_BINARY_DIR}/gtest/src/GTest-build/libgtest.a
+                ${CMAKE_CURRENT_BINARY_DIR}/gtest/src/GTest-build/libgtest_main.a
+                ${CMAKE_CURRENT_BINARY_DIR}/gtest/src/GMock-build/libgmock.a)
+
+    ExternalProject_Get_Property(GTest binary_dir)
+
+    add_library(gtest UNKNOWN IMPORTED)
+    set_target_properties(gtest      PROPERTIES IMPORTED_LOCATION ${binary_dir}/libgtest.a)
+    add_dependencies(gtest GTest)
+    set(GTEST_LIBRARY "gtest")
 
-set(GTEST_CMAKE_ARGS "")
-if (${MIR_IS_CROSS_COMPILING})
-    set(GTEST_CMAKE_ARGS
-        -DCMAKE_TOOLCHAIN_FILE=${CMAKE_MODULE_PATH}/LinuxCrossCompile.cmake)
+    add_library(gtest_main UNKNOWN IMPORTED)
+    set_target_properties(gtest_main PROPERTIES IMPORTED_LOCATION ${binary_dir}/libgtest_main.a)
+    add_dependencies(gtest_main GTest)
+    set(GTEST_MAIN_LIBRARY "gtest_main")
+
+    set(GTEST_BOTH_LIBRARIES ${GTEST_LIBRARY} ${GTEST_MAIN_LIBRARY})
+    find_path(GTEST_INCLUDE_DIRS NAMES gtest/gtest.h)
+    find_package_handle_standard_args(GTest GTEST_LIBRARY GTEST_BOTH_LIBRARIES GTEST_INCLUDE_DIRS)
 endif()
 
-if (USING_GOOGLETEST_1_8)
-  list(APPEND GTEST_CMAKE_ARGS -DBUILD_GTEST=ON)
+find_file(GMOCK_SOURCE
+        NAMES gmock-all.cc
+        DOC "GMock source"
+        PATHS /usr/src/googletest/googlemock/src/ /usr/src/gmock/ /usr/src/gmock/src)
+
+if (EXISTS ${GMOCK_SOURCE})
+    find_path(GMOCK_INCLUDE_DIR gmock/gmock.h)
+
+    add_library(GMock STATIC ${GMOCK_SOURCE})
+
+    if (EXISTS /usr/src/googletest/googlemock/src)
+        set_source_files_properties(${GMOCK_SOURCE} PROPERTIES COMPILE_FLAGS "-I/usr/src/googletest/googlemock")
+    endif()
+
+    if (EXISTS /usr/src/gmock/src)
+        set_source_files_properties(${GMOCK_SOURCE} PROPERTIES COMPILE_FLAGS "-I/usr/src/gmock")
+    endif()
+
+    find_package_handle_standard_args(GMock DEFAULT_MSG GMOCK_INCLUDE_DIR)
+
+    set(GMOCK_LIBRARY GMock)
+else()
+    # Assume gmock is no longer source, we'll find out soon enough if that's wrong
+    add_custom_target(GMock)
+    string(REPLACE gtest gmock GMOCK_LIBRARY ${GTEST_LIBRARY})
 endif()
 
-ExternalProject_Add(
-    GMock
-    #where to build in source tree
-    PREFIX ${GMOCK_PREFIX}
-    #where the source is external to the project
-    SOURCE_DIR ${GMOCK_INSTALL_DIR}
-    #forward the compilers to the subproject so cross-arch builds work
-    CMAKE_ARGS ${GTEST_CMAKE_ARGS}
-    BINARY_DIR ${GMOCK_BASE_BINARY_DIR}
-
-    #we don't need to install, so skip
-    INSTALL_COMMAND ""
-)
-
-set(GMOCK_LIBRARY ${GMOCK_BINARY_DIR}/libgmock.a)
-set(GMOCK_MAIN_LIBRARY ${GMOCK_BINARY_DIR}/libgmock_main.a)
-set(GMOCK_BOTH_LIBRARIES ${GMOCK_LIBRARY} ${GMOCK_MAIN_LIBRARY})
-set(GTEST_LIBRARY ${GTEST_BINARY_DIR}/libgtest.a)
-set(GTEST_MAIN_LIBRARY ${GTEST_BINARY_DIR}/libgtest_main.a)
-set(GTEST_BOTH_LIBRARIES ${GTEST_LIBRARY} ${GTEST_MAIN_LIBRARY})
-set(GTEST_ALL_LIBRARIES ${GTEST_BOTH_LIBRARIES} ${GMOCK_BOTH_LIBRARIES})
-
-find_package_handle_standard_args(GTest  DEFAULT_MSG
-                                    GMOCK_INCLUDE_DIR
-                                    GTEST_INCLUDE_DIR)
+set(GMOCK_LIBRARIES ${GTEST_BOTH_LIBRARIES} ${GMOCK_LIBRARY})
